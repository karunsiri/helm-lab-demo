---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
      {{- with .Values.app.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
    {{- end }}

    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.app.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.app.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}

          {{- with .Values.app.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          # command:
          #   - /bin/sh
          #   - "-c"
          #   - "bundle exec puma -C config/puma.rb"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.app.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.livenessProbe.path }}
              port: http
              scheme: {{ .Values.app.livenessProbe.scheme }}
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.app.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.readinessProbe.path }}
              port: http
              scheme: {{ .Values.app.readinessProbe.scheme }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          env:
            {{- range $name, $value := .Values.app.env }}
            - name: {{ $name }}
              value: "{{ $value }}"
            {{- end }}
            - name: RAILS_LOG_TO_STDOUT
              value: enabled
            - name: WEB_CONCURRENCY
              value: "5"

      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
